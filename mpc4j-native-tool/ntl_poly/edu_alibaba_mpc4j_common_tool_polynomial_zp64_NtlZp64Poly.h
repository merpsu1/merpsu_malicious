/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly */

#ifndef _Included_edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly
#define _Included_edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly
 * Method:    nativeRootInterpolate
 * Signature: (JI[JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly_nativeRootInterpolate
  (JNIEnv *, jclass, jlong, jint, jlongArray, jlong);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly
 * Method:    nativeInterpolate
 * Signature: (JI[J[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly_nativeInterpolate
  (JNIEnv *, jclass, jlong, jint, jlongArray, jlongArray);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly
 * Method:    nativeSingleEvaluate
 * Signature: (J[JJ)J
 */
JNIEXPORT jlong JNICALL Java_edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly_nativeSingleEvaluate
  (JNIEnv *, jclass, jlong, jlongArray, jlong);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly
 * Method:    nativeEvaluate
 * Signature: (J[J[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_edu_alibaba_mpc4j_common_tool_polynomial_zp64_NtlZp64Poly_nativeEvaluate
  (JNIEnv *, jclass, jlong, jlongArray, jlongArray);

#ifdef __cplusplus
}
#endif
#endif
